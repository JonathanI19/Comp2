MEMORY COMPARISON
    1. Hash Table
        Stack:  24,008 Bytes
        Heap:   3,560,196 Bytes
        Total:  3,584,204 Bytes
    2. Binary Search Tree
        Stack:  16 Bytes
        Heap:   10,053,265 Bytes
        Total:  10,053,281 Bytes

TRAVERSAL COMPARISON
    1. Hash Table
        Avg Traversals: 4.65786
    2. Binary Search Tree
        Avg Traversals: 14.0549
        Num Nodes:      2324

SUMMARY
For my implementation of these functions, it appears that the Hash Table is superior in both memory allocation and in avg traversals per search. While the hash table method doesn't explicitly place the various vectors or their elements in the heap, it shouldn't matter as when you declare a vector, the header is stored in the stack but the elements are put into the heap. This is why the stack is so much larger for the hash table.